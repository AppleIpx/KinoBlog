# Generated by Django 4.2.10 on 2024-04-23 14:41

from django.db import migrations, models
import django.db.models.deletion
import some_proj.blog.snippets.film_snippet
import some_proj.blog.snippets.serial_snippet
import some_proj.media_for_kino_card.utils.shared_files.generate_name_poster
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=250, verbose_name='Фамилия')),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name='Электронная почтв')),
                ('work_experience', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Опыт работы, единица измерения (год)')),
            ],
        ),
        migrations.CreateModel(
            name='BlockImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250, verbose_name='Текст слайда')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(verbose_name='Дата публикации')),
                ('body', wagtail.fields.StreamField([('text', wagtail.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'bold', 'italic', 'hr', 'blockquote'], help_text='Введите описание', label='Текст')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Загрузите изображение', icon='image', label='Изображение', template='blocks/imgblock.html', upload_to=some_proj.media_for_kino_card.utils.shared_files.generate_name_poster.generate_filename_photos)), ('content', wagtail.embeds.blocks.EmbedBlock(help_text='Пример ссылки: https://www.youtube.com/watch?v=5mM0fX_kKCU', label='Ссылка на видео контент')), ('film', wagtail.snippets.blocks.SnippetChooserBlock(some_proj.blog.snippets.film_snippet.FilmBlogModel, help_text='Укажите фильм', label='Фильм', required=False)), ('serial', wagtail.snippets.blocks.SnippetChooserBlock(some_proj.blog.snippets.serial_snippet.SerialBlogModel, help_text='Укажите сериал', label='Сериал', required=False)), ('slides', wagtail.snippets.blocks.SnippetChooserBlock(some_proj.blog.snippets.serial_snippet.SerialBlogModel, label='Кадры из фильма/сериала', required=False))], blank=True, verbose_name='Место для творчества')),
            ],
            options={
                'verbose_name': 'пост',
                'verbose_name_plural': 'посты',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogTagPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название профессии', max_length=155, verbose_name='Профессия')),
            ],
            options={
                'verbose_name': 'профессия автора',
                'verbose_name_plural': 'профессии автора',
            },
        ),
        migrations.CreateModel(
            name='SlidesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'кадр с фильма/сериала',
                'verbose_name_plural': 'кадры с фильмов/сериалов',
            },
        ),
    ]
